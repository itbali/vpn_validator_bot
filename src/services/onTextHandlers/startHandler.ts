import { HandlerType } from './handlerType';

export const startHandler: HandlerType = async ({ msg, isAdmin, bot, User, keyboard, subscriptionService }) => {
  const chatId = msg.chat.id;
  const username = msg.from?.username;
  const isPrivate = msg.chat.type === 'private';

  if (!isPrivate) {
    return;
  }

  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${username || '–±–µ–∑ username'} (ID: ${chatId}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞`);

  if (!msg.from) {
    return bot.sendMessage(chatId, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è');
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
  const isPaidSubscribed = await subscriptionService?.checkPaidSubscription(chatId);
  const isMentoringSubscribed = await subscriptionService?.checkMentorSubscription(chatId);
  const isSubscribed = isPaidSubscribed || isMentoringSubscribed;

  try {
    console.log(`üìù –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}:`, {
      username: username,
      isAdmin: isAdmin,
    });

    const user = (
      await User?.findOrCreate({
        where: { telegram_id: String(msg.from.id) },
        defaults: {
          telegram_id: String(msg.from.id),
          username: msg.from.username,
          first_name: msg.from.first_name,
          last_name: msg.from.last_name,
        },
      })
    )?.[0];

    if (!isSubscribed) {
      return bot.sendMessage(
        chatId,
        `–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ VPN –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±—É—Å—Ç–∏: <a href="https://boosty.to/sovit">alex-diuzhev.ru</a>
              –ò–ª–∏ –±—ã—Ç—å —É—á–µ–Ω–∏–∫–æ–º –Ω–∞ –º–µ–Ω—Ç–æ—Ä–∏–Ω–≥–µ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é`,
        {
          parse_mode: 'HTML',
        },
      );
    }

    if (!user?.is_active) {
      return bot.sendMessage(chatId, '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
    }

    if (user?.is_admin !== isAdmin) {
      await User?.update({ is_admin: isAdmin }, { where: { telegram_id: chatId.toString() } });
    }

    await bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', keyboard);
  } catch (error) {
    console.error('Error in /start command:', error);
    bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
};
